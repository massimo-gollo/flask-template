#version: '3.8'
x-xxx-common-services-config: &common-services-config
  restart: always

x-common-variables: &common-variables
  FLASK_DEBUG: 1

x-mongo-db-env: &mongo-db-env
  MONGO_INITDB_ROOT_USERNAME: &mongo-db-user root
  MONGO_INITDB_ROOT_PASSWORD: &mongo-db-password toor

x-flaskenv: &flask-env
  <<: *common-variables
  FLASK_APP: app
  SECRET_KEY: supersecret
  MONGO_HOST: mongo-db
  MONGO_PORT: 27017
  MONGO_USER: *mongo-db-user
  MONGO_PASS: *mongo-db-password
  MONGO_NAME: flask-template

x-xxx-port-mapping:
  webservices:
    flask-app: &flask-app-port
      - 8080:5000
    mongo-db: &mongo-db-ports
      - 8081:27017

volumes:
  mongo-db:

services:

  flask-app:
    <<: *common-services-config
    environment: *flask-env
    ports: *flask-app-port
    image: my-flask-app
    build:
      context: ../
      dockerfile: docker/Dockerfile
    volumes:
      - ../:/code

  mongo-db:
     <<: *common-services-config
     environment: *mongo-db-env
     ports: *mongo-db-ports
     image: mongo
     volumes:
       - mongo-db:/data/db

  mongo-express:
    <<: *common-services-config
    image: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-db
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=toor
      - ME_CONFIG_BASICAUTH_USERNAME=root
      - ME_CONFIG_BASICAUTH_PASSWORD=toor
    depends_on:
      - mongo-db
    ports:
      - "8088:8081"





